"use client";
import React, { useEffect, useState } from "react";

import Image from "next/image";
// import Anime from "react-anime";
import anime from "animejs";

const SvgComponent = (props) => (
  <svg
    width="210mm"
    height="297mm"
    viewBox="0 0 210 297"
    id="svg1"
    inkscape:version="1.3.2 (091e20e, 2023-11-25, custom)"
    sodipodi:docname="curve.svg"
    xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
    xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
    xmlns="http://www.w3.org/2000/svg"
    xmlns:svg="http://www.w3.org/2000/svg"
    {...props}
  >
    <sodipodi:namedview
      id="namedview1"
      pagecolor="#ffffff"
      bordercolor="#000000"
      borderopacity={0.25}
      inkscape:showpageshadow={2}
      inkscape:pageopacity={0}
      inkscape:pagecheckerboard={0}
      inkscape:deskcolor="#d1d1d1"
      inkscape:document-units="mm"
      inkscape:zoom={1.3191369}
      inkscape:cx={561.35189}
      inkscape:cy={396.85039}
      inkscape:window-width={2400}
      inkscape:window-height={1261}
      inkscape:window-x={4786}
      inkscape:window-y={1341}
      inkscape:window-maximized={1}
      inkscape:current-layer="layer1"
    />
    <defs id="defs1" />
    <g inkscape:label="Layer 1" inkscape:groupmode="layer" id="layer1">
      <path
        style={{
          fill: "#000000",
          strokeWidth: 0.264999,
        }}
        id="path1"
        class="path-anime"
        d="m 39.796063,109.04098 c 0.311785,0.63678 1.418241,0.54982 1.966683,0.57652 1.737759,0.0846 1.399386,0.0543 3.360475,0.0168 2.989863,-0.12942 5.962018,-0.52282 8.895136,-1.11185 1.241745,-0.24937 2.470848,-0.55801 3.706812,-0.83459 5.723273,-1.28077 2.730257,-0.49416 8.433017,-2.20573 4.737809,-1.51175 4.429715,-1.32343 9.106842,-3.18477 1.57531,-0.62692 3.150391,-1.25718 4.696989,-1.95192 2.702978,-1.214208 6.277898,-3.058018 8.864581,-4.513348 1.381906,-0.777494 2.728918,-1.61543 4.093379,-2.423144 3.340603,-2.035625 4.347192,-2.513092 7.375453,-4.865947 5.05372,-3.926565 7.15255,-5.037473 10.44976,-9.107522 1.77057,-2.185577 1.85224,-2.561783 3.16173,-4.923218 0.28989,-0.760606 0.63808,-1.501479 0.86967,-2.281817 0.62628,-2.110267 0.78431,-4.06889 -0.13282,-6.124027 -0.72731,-1.629765 -1.28747,-1.972001 -2.51362,-3.210457 -0.53384,-0.373507 -1.03876,-0.7922 -1.60152,-1.120518 -2.30207,-1.343055 -5.01502,-1.897685 -7.6587,-1.914904 -0.64979,-0.0042 -1.29806,0.06339 -1.9471,0.09509 -1.889983,0.217598 -3.74358,0.686191 -5.448605,1.548728 -0.544237,0.275317 -1.100209,0.550791 -1.569908,0.939866 -1.747316,1.447382 -3.458442,2.945638 -5.060457,4.552368 -0.448649,0.449966 -0.705975,1.056703 -1.058963,1.585052 -0.283562,0.57734 -0.614813,1.133608 -0.850691,1.732013 -0.821672,2.084528 -1.088028,4.321569 -0.897004,6.547541 0.170651,1.988552 0.461306,2.694678 0.990544,4.592026 1.0706,3.013252 2.779062,5.706639 5.239195,7.780081 1.719897,1.449556 2.524881,1.763101 4.503711,2.854819 0.89867,0.376881 1.779193,0.800354 2.696011,1.130639 4.090977,1.473779 8.702747,2.105734 13.031177,2.271712 1.21616,0.04663 2.43406,0.01513 3.65109,0.02267 6.43954,-0.06893 12.85067,-0.840592 19.1646,-2.085173 1.26644,-0.249637 2.52409,-0.54192 3.78614,-0.812879 6.75195,-1.475923 13.38231,-3.444669 19.95177,-5.578182 4.52349,-1.455496 8.99075,-3.075032 13.43398,-4.757372 1.81608,-0.735658 3.75826,-1.251008 5.35909,-2.429018 2.88297,-2.121508 -0.19579,-0.150484 2.1276,-1.591183 0.2657,0.112115 1.58698,-3.019102 1.32128,-3.131217 v 0 c -1.88731,-0.07644 0.58574,0.13846 -1.27457,-0.426944 -0.62141,-0.188865 -1.40229,0.04664 -1.97828,0.195931 -0.17077,0.04426 -2.6998,0.796073 -2.77086,0.817148 -4.3274,1.274849 -8.63692,2.608323 -12.96068,3.895243 -6.41942,1.832557 -12.85245,3.627347 -19.37381,5.067744 -3.74854,0.783868 -7.49242,1.610458 -11.2748,2.219402 -1.24062,0.199734 -2.48623,0.367594 -3.73169,0.534477 -4.07216,0.545645 -3.18487,0.419372 -7.26646,0.723551 -1.99777,0.05511 -5.03509,0.16402 -7.03905,0.119766 -2.43636,-0.0538 -3.90148,-0.189439 -6.28524,-0.563528 -0.93976,-0.147479 -1.8795,-0.304776 -2.80573,-0.521534 -0.82653,-0.193418 -1.63087,-0.471685 -2.4463,-0.70753 -0.74099,-0.301728 -1.50393,-0.554357 -2.22298,-0.905182 -1.121973,-0.547412 -2.578616,-1.483595 -3.495897,-2.356315 -1.451094,-1.380601 -2.334617,-3.192725 -3.031905,-5.037087 -0.165407,-0.647621 -0.360069,-1.288466 -0.496218,-1.94286 -0.284898,-1.369343 -0.418275,-2.435791 -0.362091,-3.832214 0.0236,-0.586571 0.0593,-1.179206 0.195387,-1.750261 0.268563,-1.127003 0.841725,-1.984838 1.398498,-2.977211 0.339196,-0.425844 1.503132,-1.523778 1.017585,-1.27753 -0.991857,0.503029 -1.725851,1.403474 -2.606106,2.083157 -0.421725,0.325634 0.799605,-0.706773 1.230119,-1.020696 1.059905,-0.772861 1.625431,-1.057934 2.872584,-1.472285 0.526103,-0.174791 1.07088,-0.287332 1.60632,-0.430995 0.560284,-0.06747 1.117737,-0.165389 1.680858,-0.202406 2.089526,-0.137359 4.609916,0.110492 6.521046,1.020844 0.45096,0.214813 0.8557,0.515586 1.28355,0.77338 0.75455,0.659971 1.29915,0.928108 1.57848,1.948952 0.26048,0.951976 -0.0276,1.999253 -0.35673,2.876725 -0.61251,1.632664 -1.15803,2.281018 -2.12492,3.773252 -1.75021,2.118019 -1.78205,2.318054 -3.92827,4.208957 -0.85214,0.750766 -1.84866,1.33831 -2.6432,2.149785 -0.693589,0.708379 3.24324,-2.242736 2.33813,-1.838212 -2.44206,1.091436 -4.13034,3.517628 -6.600514,4.563679 -3.23152,1.909443 -4.733137,2.847271 -8.084648,4.617233 -1.443186,0.762156 -2.909194,1.480413 -4.371202,2.20581 -1.466758,0.727755 -2.92853,1.466726 -4.414893,2.15355 -2.867639,1.325089 -5.948588,2.567218 -8.868895,3.775998 -1.419881,0.50705 -2.84526,0.998966 -4.259646,1.521156 -1.316733,0.486135 -2.607116,1.043641 -3.933205,1.503641 -1.257049,0.43605 -2.539918,0.79382 -3.812212,1.18315 -3.12189,0.95532 -6.253501,1.8797 -9.397312,2.76031 -2.574057,0.68325 -1.809512,0.47253 -4.12033,1.11203 -1.192027,0.32989 -2.394212,0.66065 -3.469907,1.29263 -0.176334,-0.11976 -1.587667,1.95835 -1.411333,2.0781 z"
      />
    </g>
  </svg>
);

export default function Home() {
  const [animationRef, setAnimationRef] = useState();

  useEffect(() => {
    console.log("redered");
    setAnimationRef(
      anime({
        targets: ".path-anime",
        strokeDashoffset: [anime.setDashoffset, 0],
        easing: "cubicBezier(.5, .05, .1, .3)",
        duration: 1000,
        delay: function (el, i) {
          return i * 250;
        },
      })
    );
  }, []);

  return (
    <div className="w-screen h-screen bg-white">
      {/* <Image
        src="/happyness.svg"
        alt="happyness"
        width={180}
        height={37}
        priority
      /> */}
      {/* <Image
        src="/background_with_tulip.png"
        width={500}
        height={500}
        alt="Jongil Yoon"
      /> */}
      <SvgComponent width={180} height={370} />
    </div>
  );
}
